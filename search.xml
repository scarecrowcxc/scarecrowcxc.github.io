<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>idea 新建项目spring.io找不到了（亲测）</title>
      <link href="/2019/08/06/springboot/"/>
      <url>/2019/08/06/springboot/</url>
      
        <content type="html"><![CDATA[<p>1:原因：spring boot插件未启用</p><p>2：打开idea 依次打开 settings》plugins》搜索spring boot 勾选即可，重启idea生效；</p><p>3：效果图如下<br><img src="/" class="lazyload" data-src="http://qiniu.shieldofzues.cn/2020-06-02-065229.png"  alt=""><br><img src="/" class="lazyload" data-src="http://qiniu.shieldofzues.cn/2020-06-02-065245.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
            <tag> spring.io </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日常开发本人常用idea插件分享（二）</title>
      <link href="/2019/07/23/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/07/23/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<hr><p>[TOC]<br><strong>多看<a href="https://www.jetbrains.com/help/idea/creating-and-optimizing-imports.html#disable-import-popups" target="_blank" rel="noopener">官方使用文档</a>还是很不错的~<br>IntelliJ IDEA的每个方面都专门设计用于最大化开发人员的工作效率。<br>强大的静态代码分析和符合人体工程学的设计使开发不仅具有高效性，而且还具有令人愉悦的体验。</strong><br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/idea--Idea-plugin-sharing/master/25.png"  alt="25.png"><br><em>插件库:</em>   <a href="http://plugins.jetbrains.com/" target="_blank" rel="noopener">官网网址</a> </p><p>两种安装方式：<br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/idea--Idea-plugin-sharing/master/21.png"  alt="21.png"></p><h2 id="1-Alibaba-Cloud-Toolkit"><a href="#1-Alibaba-Cloud-Toolkit" class="headerlink" title="1.Alibaba Cloud Toolkit"></a>1.Alibaba Cloud Toolkit</h2><blockquote><p>简介：<br>Alibaba Cloud Toolkit （后文简称 Cloud Toolkit）是针对 IDE 平台为开发者提供的一款插件，用于帮助开发者更高效地开发、测试、诊断应用和部署应用。通过 Cloud Toolkit，您可以将应用部署到云端（ECS、EDAS、容器服务 Kubernetes 等云产品）和任意服务器中去；通过内嵌的 Arthas 程序诊断、 Terminal Shell 终端和 MySQL 执行器等工具，可以快速开发、测试和诊断应用。<br>** 简言之，可将web应用等，一键部署到阿里云服务器或任意服务器下，并执行相关后续操作。**</p><blockquote><p>1.1 传统部署方式<br>在传统部署方式中，需要 7 个以上的步骤才能完成部署，并且在本地 IDE、云产品控制台、Git/SVN、Maven/Gradle、镜像仓库、ECS、容器等多个产品间来回切换。<br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/idea--Idea-plugin-sharing/master/22.png"  alt="22.png"><br>1.2  Cloud Toolkit 部署方式(<em>优势</em>)<br>在使用 Cloud Toolkit 的部署方式中，插件自动化了项目构建、SCP 上传部署包、制作 Docker Image、登录机器、推送至镜像仓库等多个步骤。您只需要在第一次使用时在本地 IDE 上安装 Cloud Toolkit，即可快速部署。<br>1.3 下载链接及官方使用教程</p><blockquote><p><a href="https://www.aliyun.com/product/cloudtoolkit" target="_blank" rel="noopener">官网视频演示及相关内容介绍地址</a><br><a href="http://plugins.jetbrains.com/plugin/11386-alibaba-cloud-toolkit" target="_blank" rel="noopener">插件下载链接</a></p></blockquote></blockquote></blockquote><h2 id="2-Alibaba-Java-Coding-Guidelines"><a href="#2-Alibaba-Java-Coding-Guidelines" class="headerlink" title="2.Alibaba Java Coding Guidelines"></a>2.Alibaba Java Coding Guidelines</h2><blockquote><blockquote><p>2.1 下载链接及官方使用教程（支持eclipse）<br>配合《阿里巴巴Java开发手册》还是很值的使用的~</p><blockquote><p><a href="https://github.com/alibaba/p3c" target="_blank" rel="noopener">源码地址</a><br><a href="https://github.com/alibaba/p3c/wiki/IDEA%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3" target="_blank" rel="noopener">使用教程</a><br><a href="http://plugins.jetbrains.com/plugin/10046-alibaba-java-coding-guidelines" target="_blank" rel="noopener">插件下载链接</a></p></blockquote></blockquote></blockquote><h2 id="3-RestfulToolkit（需Spring体系）"><a href="#3-RestfulToolkit（需Spring体系）" class="headerlink" title="3.RestfulToolkit（需Spring体系）"></a>3.RestfulToolkit（需Spring体系）</h2><blockquote><p>简介：一套 RESTful 服务开发辅助工具集。</p><blockquote><p>1.根据 URL 直接跳转到对应的方法定义 ( Ctrl \ or Ctrl Alt N );<br>2.提供了一个 Services tree 的显示窗口;<br>3.一个简单的 http 请求工具;<br>4.在请求方法上添加了有用功能: 复制生成 URL;,复制方法参数…<br>5.其他功能: java 类上添加 Convert to JSON 功能，格式化 json 数据 ( Windows: Ctrl + Enter; Mac: Command + Enter )。<br>支持 Spring 体系 (Spring MVC / Spring Boot 1.x,2.x)<br>支持 JAX-RS<br>支持 Java 和 Kotlin 语言。</p></blockquote></blockquote><blockquote><p>3.1 效果图及使用方法<br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/idea--Idea-plugin-sharing/master/23.png"  alt="23.png"><br>3.2 插件下载地址</p><blockquote><p><a href="https://plugins.jetbrains.com/plugin/10292-restfultoolkit" target="_blank" rel="noopener">插件下载链接</a></p></blockquote></blockquote><h2 id="4-SonarLint"><a href="#4-SonarLint" class="headerlink" title="4.SonarLint"></a>4.SonarLint</h2><blockquote><p>简介：想不想身边有个“大神”指导你开发？它就可以满足你<del>不错的代码质量检测插件，帮你检测代码中的“坏味道</del>”。</p><blockquote><p><a href="https://www.sonarlint.org/" target="_blank" rel="noopener">官网-需墙</a><br><a href="https://blog.sonarsource.com/" target="_blank" rel="noopener">博客-需墙</a></p></blockquote></blockquote><blockquote><p>4.1 效果图<br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/idea--Idea-plugin-sharing/master/24.png"  alt="24.png"><br>4.2 插件下载地址</p><blockquote><p><a href="https://plugins.jetbrains.com/plugin/7973-sonarlint/" target="_blank" rel="noopener">插件下载链接</a></p></blockquote></blockquote><h2 id="5-其它插件"><a href="#5-其它插件" class="headerlink" title="5.其它插件"></a>5.其它插件</h2><p>关于各个插件如何使用的问题，下载链接中一般都会有一些简单的gif演示；或自行按需要找一找便可，这里不一一赘述。</p><table><thead><tr><th>插件名称</th><th>插件介绍</th><th>插件下载地址</th></tr></thead><tbody><tr><td>Gitee</td><td>开源中国的码云插件</td><td><a href="https://plugins.jetbrains.com/plugin/8383-gitee" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/8383-gitee</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>IDE Features Trainer</td><td>IntelliJ IDEA 官方出的学习辅助插件</td><td><a href="https://plugins.jetbrains.com/plugin/8554?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/8554?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Key promoter</td><td>快捷键提示</td><td><a href="https://plugins.jetbrains.com/plugin/4455?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/4455?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Grep Console</td><td>自定义设置控制台输出颜色</td><td><a href="https://plugins.jetbrains.com/idea/plugin/7125-grep-console" target="_blank" rel="noopener">https://plugins.jetbrains.com/idea/plugin/7125-grep-console</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>String Manipulation</td><td>驼峰式命名和下划线命名交替变化</td><td><a href="https://plugins.jetbrains.com/plugin/2162?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/2162?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>CheckStyle-IDEA</td><td>代码规范检查</td><td><a href="https://plugins.jetbrains.com/plugin/1065?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/1065?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>FindBugs-IDEA</td><td>潜在 Bug 检查</td><td><a href="https://plugins.jetbrains.com/plugin/3847?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/3847?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>MetricsReloaded</td><td>代码复杂度检查</td><td><a href="https://plugins.jetbrains.com/plugin/93?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/93?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Statistic</td><td>代码统计</td><td><a href="https://plugins.jetbrains.com/plugin/4509?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/4509?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>JRebel Plugin</td><td>热部署</td><td><a href="https://plugins.jetbrains.com/plugin/?id=4441" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/?id=4441</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>CodeGlance</td><td>在编辑代码最右侧，显示一块代码小地图</td><td><a href="https://plugins.jetbrains.com/plugin/7275?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/7275?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>GsonFormat</td><td>把 JSON 字符串直接实例化成类</td><td><a href="https://plugins.jetbrains.com/plugin/7654?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/7654?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Markdown Navigator</td><td>书写 Markdown 文章</td><td><a href="https://plugins.jetbrains.com/plugin/7896?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/7896?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Eclipse Code Formatter</td><td>使用 Eclipse 的代码格式化风格，在一个团队中如果公司有规定格式化风格，这个可以使用。</td><td><a href="https://plugins.jetbrains.com/plugin/6546?pr=idea" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/6546?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Jindent-Source Code Formatter</td><td>自定义类、方法、doc、变量注释模板</td><td><a href="http://plugins.jetbrains.com/plugin/2170?pr=idea" target="_blank" rel="noopener">http://plugins.jetbrains.com/plugin/2170?pr=idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Translation</td><td>翻译插件</td><td><a href="https://github.com/YiiGuxing/TranslationPlugin" target="_blank" rel="noopener">https://github.com/YiiGuxing/TranslationPlugin</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Maven Helper</td><td>Maven 辅助插件</td><td><a href="https://plugins.jetbrains.com/plugin/7179-maven-helper" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/7179-maven-helper</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Properties to YAML Converter</td><td>把 Properties 的配置格式改为 YAML 格式</td><td><a href="https://plugins.jetbrains.com/plugin/8000-properties-to-yaml-converter" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/8000-properties-to-yaml-converter</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Git Flow Integration</td><td>Git Flow 的图形界面操作</td><td><a href="https://plugins.jetbrains.com/plugin/7315-git-flow-integration" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/7315-git-flow-integration</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Rainbow Brackets</td><td>对各个对称括号进行着色，方便查看</td><td><a href="https://github.com/izhangzhihao/intellij-rainbow-brackets" target="_blank" rel="noopener">https://github.com/izhangzhihao/intellij-rainbow-brackets</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Free Mybatis plugin</td><td>xml与mapper间跳转（免费）</td><td><a href="https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/8321-free-mybatis-plugin</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Lombok Plugin</td><td>Lombok 功能辅助插件（@Data等）</td><td><a href="https://plugins.jetbrains.com/plugin/6317-lombok-plugin" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/6317-lombok-plugin</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>.ignore</td><td>各类版本控制忽略文件生成工具</td><td><a href="https://plugins.jetbrains.com/plugin/7495--ignore" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/7495--ignore</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>mongo4idea</td><td>mongo客户端</td><td><a href="https://github.com/dboissier/mongo4idea" target="_blank" rel="noopener">https://github.com/dboissier/mongo4idea</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>iedis</td><td>redis客户端</td><td><a href="https://plugins.jetbrains.com/plugin/9228-iedis" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/9228-iedis</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>GenerateAllSetter</td><td>new POJO类的快速生成 set 方法</td><td><a href="https://plugins.jetbrains.com/plugin/9360-generateallsetter" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/9360-generateallsetter</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>MyBatis Log Plugin</td><td>将 Mybatis 执行的 sql 脚本显示出来，无需处理，可以直接复制出来执行的</td><td><a href="https://plugins.jetbrains.com/plugin/10065-mybatis-log-plugin" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/10065-mybatis-log-plugin</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>stackoverflow</td><td>这一看似平淡的右键 stackoverflow，却把其中的闷骚体现的淋漓尽致：我就这么叼，我就不去浏览器里查，只有右键才和我的右手匹配。</td><td><a href="https://plugins.jetbrains.com/plugin/9513-stackoverflow" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/9513-stackoverflow</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Nyan progress bar</td><td>普通的人进度条都太普通，我的精致要装扮到每一个细节，包括进度条！</td><td><a href="https://plugins.jetbrains.com/plugin/8575-nyan-progress-bar" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/8575-nyan-progress-bar</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>activate-power-mode</td><td>炫酷的输入效果（带震动效果）同类型的还有冒火焰的 Power Mode II</td><td><a href="https://plugins.jetbrains.com/plugin/8330-activate-power-mode" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/8330-activate-power-mode</a></td></tr><tr><td></td><td></td><td></td></tr><tr><td>Material Theme UI</td><td>Material Theme UI 是 JetBrains IDE（IntelliJ IDEA，WebStorm，Android Studio 等）的插件，可将原始外观更改为 Material Design 外观。</td><td><a href="https://plugins.jetbrains.com/plugin/8006-material-theme-ui" target="_blank" rel="noopener">https://plugins.jetbrains.com/plugin/8006-material-theme-ui</a></td></tr><tr><td><a href="#top">top</a></td><td></td><td></td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用浏览器插件分享（一）</title>
      <link href="/2019/07/23/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/07/23/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p><em>写在最前面：安装“谷歌浏览器”以下插件的前提-先墙，推荐蓝灯 链接如：<a href="https://github.com/getlantern/lantern" target="_blank" rel="noopener">lantern</a> 使用方法很简单，点击启动即可。</em><br>各个浏览器都有很多好用的插件，个人比较依赖谷歌<del>大家依自己喜好，用得上的就是好插件[捂嘴笑]</del><br><strong>谷歌浏览器&gt;更多工具&gt;扩展程序&gt;（访问需墙）打开Chorm网上应用店</strong><br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/-Google-Chrome-plugin-sharing/master/1.png"  alt="1.png"></p><p>大部分在GitHub上均有托管，感兴趣可以去找找看，没准儿有不一样的灵感~</p><h3 id="1-1-谷歌访问助手-PP谷歌访问助手"><a href="#1-1-谷歌访问助手-PP谷歌访问助手" class="headerlink" title="1.1 谷歌访问助手/PP谷歌访问助手"></a>1.1 谷歌访问助手/PP谷歌访问助手</h3><p>谷歌访问助手效果图为例：<br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/-Google-Chrome-plugin-sharing/master/2.png"  alt="2.png"></p><p><em>(建议先安装，之后可以借助其翻墙，类似插件还要好多<del>需要你自己去发现</del>)</em></p><p>最简单易用的谷歌访问助手,为chrome扩展用户量身打造。可以解决chrome扩展无法自动更新的问题，同时可以访问谷歌google搜索，gmail邮箱；<br>帮助访问Google网站，永久免费，不限时。简单，好用。可更快的访问Google搜索，Gmail邮箱，Google翻译，Google地图，Google Docs文档等。</p><h3 id="1-2-JSON-handle"><a href="#1-2-JSON-handle" class="headerlink" title="1.2 JSON-handle"></a>1.2 JSON-handle</h3><p>效果图：<br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/-Google-Chrome-plugin-sharing/master/3.png"  alt="3.png"></p><p>对JSON格式的内容进行浏览和编辑，以树形图样式展现JSON文档，并可实时编辑。</p><h3 id="1-4-Axure-RP-Extension-for-Chrome"><a href="#1-4-Axure-RP-Extension-for-Chrome" class="headerlink" title="1.4 Axure RP Extension for Chrome"></a>1.4 Axure RP Extension for Chrome</h3><p>Axure RP Extension for Chrome是一款谷歌插件，用来查看原型文件。</p><h3 id="1-5-Octotree"><a href="#1-5-Octotree" class="headerlink" title="1.5 Octotree"></a>1.5 Octotree</h3><p>效果图：<br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/-Google-Chrome-plugin-sharing/master/4.png"  alt="4.png"></p><p>浏览器扩展（Chrome，Firefox，Opera和Safari）在GitHub和GitLab上显示代码树。 非常棒的探索项目源而无需将每个存储库都拉到您的机器上。 特征：</p><p>易于导航的代码树，就像在IDE中一样<br>使用pjax和Turbolinks快速浏览<br>支持私有存储库（请参阅说明）<br>支持GitHub和GitLab Enterprise（仅限Chrome和Opera，请参阅说明）</p><h3 id="1-6-WEB前端助手-FeHelper"><a href="#1-6-WEB前端助手-FeHelper" class="headerlink" title="1.6 WEB前端助手(FeHelper)"></a>1.6 WEB前端助手(FeHelper)</h3><p>效果图：<br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/-Google-Chrome-plugin-sharing/master/5.png"  alt="5.png"></p><p>FE助手：包括字符串编解码、代码压缩、美化、JSON格式化、正则表达式、时间转换工具、二维码生成与解码、编码规范检测、页面性能检测、页面取色、Ajax接口调试</p><h3 id="1-7-Sourcegraph"><a href="#1-7-Sourcegraph" class="headerlink" title="1.7 Sourcegraph"></a>1.7 Sourcegraph</h3><p>效果图：<br><img src="/" class="lazyload" data-src="https://raw.githubusercontent.com/ShieldofZues/-Google-Chrome-plugin-sharing/master/6.png"  alt="6.png"></p><p>Sourcegraph 被大众广为熟知正是因为它支持在 GitHub 上轻松浏览和搜索代码，Sourcegraph 这款 Chrome 插件称得上是开发者必备的插件，它可以让我们像使用 IDE 一样浏览和搜索 GitHub 代码。Sourcegraph 是一款能够根据语义来把 Web 上的开源代码编入索引的代码搜索浏览工具。你可以从代码仓库和安装包，甚至是函数里搜索代码，同时也可以直接点击被完全创建了链接的代码来阅读文档、跳转到变量定义或者马上找到可用的 Demo。总而言之，你可以在你的 Web 浏览器上完成这一切，而不需要配置任何编辑器。由 Sourcegraph 出品的这款 Chrome 插件，可以非常方便地浏览和搜索 GitHub 上的代码，持跨仓库(repository)搜索、跳转到定义、查找引用等功能，宛若一个功能强大的 IDE。核心功能如跳转到定义(Go-to-definition) —— 浏览文件或查看 pull 请求时，将鼠标悬停在代码上可以查看文档提示，单击即可跳转到定义、查找引用或全文搜索。</p><h3 id="1-8-其它插件"><a href="#1-8-其它插件" class="headerlink" title="1.8 其它插件"></a>1.8 其它插件</h3><p>作为后端开发，常用的接口测试插件Postman本想单独列一下，后来想想还是算了吧！什么年代了~ 现在swagger2接口模式这么主流，再整合诸如<a href="https://github.com/YMFE/yapi" target="_blank" rel="noopener">Yapi</a>之类的可视化接口管理平台，根本没postman什么事了吧[捂脸苦笑]~</p><p> 还有其它各种插件，这里不再一一赘述，Google在手！天下我有！<a href="#top">top</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>升级swagger2.9.2 报错： java.lang.NumberFormatException 解决</title>
      <link href="/2019/07/02/npoint/"/>
      <url>/2019/07/02/npoint/</url>
      
        <content type="html"><![CDATA[<p>此处是”老外”的BB叨：<a href="https://github.com/springfox/springfox/issues/2265" target="_blank" rel="noopener">https://github.com/springfox/springfox/issues/2265</a><br>异常截图：<img src="/" class="lazyload" data-src="http://qiniu.shieldofzues.cn/2020-06-02-053326.png"  alt=""><br>进源码发现 <img src="/" class="lazyload" data-src="http://qiniu.shieldofzues.cn/2020-06-02-053359.png"  alt=""><br>在使用@ApiModelProperty(value = “xx” , example=”xx “)注解时，会校验实体属性类型，若该类型是Integer，example默认为””导致转换异常。<br>解决办法（测试有效）：排除springfox-swagger2 引入的swagger-annotations、swagger-models 1.5.20版本，手动引入1.5.21版本的jar。</p><pre><code>&lt;dependency&gt;    &lt;groupId&gt;io.springfox&lt;/groupId&gt;    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;    &lt;version&gt;2.9.2&lt;/version&gt;    &lt;exclusions&gt;        &lt;exclusion&gt;            &lt;groupId&gt;io.swagger&lt;/groupId&gt;            &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt;        &lt;/exclusion&gt;        &lt;exclusion&gt;            &lt;groupId&gt;io.swagger&lt;/groupId&gt;            &lt;artifactId&gt;swagger-models&lt;/artifactId&gt;        &lt;/exclusion&gt;    &lt;/exclusions&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;io.springfox&lt;/groupId&gt;    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;    &lt;version&gt;2.9.2&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;io.swagger&lt;/groupId&gt;    &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt;    &lt;version&gt;1.5.21&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;io.swagger&lt;/groupId&gt;    &lt;artifactId&gt;swagger-models&lt;/artifactId&gt;    &lt;version&gt;1.5.21&lt;/version&gt;&lt;/dependency&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> swagger </category>
          
      </categories>
      
      
        <tags>
            
            <tag> swagger </tag>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>升级swagger2.9.2 报错： java.lang.NumberFormatException 解决</title>
      <link href="/2019/07/02/swagger/"/>
      <url>/2019/07/02/swagger/</url>
      
        <content type="html"><![CDATA[<p>此处是”老外”的BB叨：<a href="https://github.com/springfox/springfox/issues/2265" target="_blank" rel="noopener">https://github.com/springfox/springfox/issues/2265</a><br>异常截图：<img src="/" class="lazyload" data-src="http://qiniu.shieldofzues.cn/2020-06-02-053326.png"  alt=""><br>进源码发现 <img src="/" class="lazyload" data-src="http://qiniu.shieldofzues.cn/2020-06-02-053359.png"  alt=""><br>在使用@ApiModelProperty(value = “xx” , example=”xx “)注解时，会校验实体属性类型，若该类型是Integer，example默认为””导致转换异常。<br>解决办法（测试有效）：排除springfox-swagger2 引入的swagger-annotations、swagger-models 1.5.20版本，手动引入1.5.21版本的jar。</p><pre><code>&lt;dependency&gt;    &lt;groupId&gt;io.springfox&lt;/groupId&gt;    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;    &lt;version&gt;2.9.2&lt;/version&gt;    &lt;exclusions&gt;        &lt;exclusion&gt;            &lt;groupId&gt;io.swagger&lt;/groupId&gt;            &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt;        &lt;/exclusion&gt;        &lt;exclusion&gt;            &lt;groupId&gt;io.swagger&lt;/groupId&gt;            &lt;artifactId&gt;swagger-models&lt;/artifactId&gt;        &lt;/exclusion&gt;    &lt;/exclusions&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;io.springfox&lt;/groupId&gt;    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;    &lt;version&gt;2.9.2&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;io.swagger&lt;/groupId&gt;    &lt;artifactId&gt;swagger-annotations&lt;/artifactId&gt;    &lt;version&gt;1.5.21&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;io.swagger&lt;/groupId&gt;    &lt;artifactId&gt;swagger-models&lt;/artifactId&gt;    &lt;version&gt;1.5.21&lt;/version&gt;&lt;/dependency&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> swagger </category>
          
      </categories>
      
      
        <tags>
            
            <tag> swagger </tag>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录mysql查询过去十二个月中每个月的数据情况（含本月）</title>
      <link href="/2019/03/01/mysql/"/>
      <url>/2019/03/01/mysql/</url>
      
        <content type="html"><![CDATA[<p>思路：创建视图，查询过去的12个月；当然，也可以使用存储过程遍历的把12个月插入到一个临时表中。</p><p>一、以视图的形式实现</p><p>1.1创建过去十二个月的视图SQL</p><p>CREATE<br>    ALGORITHM = UNDEFINED<br>    DEFINER = <code>root</code>@<code>%</code><br>    SQL SECURITY DEFINER<br>VIEW <code>year_month_view</code> AS<br>    SELECT DATE_FORMAT(CURDATE(), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 1 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 2 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 3 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 4 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 5 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 6 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 7 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 8 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 9 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 10 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>    UNION SELECT DATE_FORMAT((CURDATE() - INTERVAL 11 MONTH), ‘%Y-%m’) AS <code>year_month</code><br>关于sql中用到的视图语法说明及视图说明：</p><p>a、ALGORITHM可取三个值：MERGE、TEMPTABLE或UNDEFINED。</p><p>如果没有ALGORITHM子句，默认算法是UNDEFINED（未定义的）。算法会影响MySQL处理视图的方式。</p><p>对于MERGE，会将引用视图的语句的文本与视图定义合并起来，使得视图定义的某一部分取代语句的对应部分。</p><p>对于TEMPTABLE，视图的结果将被置于临时表中，然后使用它执行语句。</p><p>对于UNDEFINED，MySQL自己选择所要使用的算法。如果可能，它倾向于MERGE而不是TEMPTABLE，</p><p>这是因为MERGE通常更有效，而且如果使用了临时表，视图是不可更新的。</p><p>b、DEFINER 表示按定义者拥有的权限来执行（指定视图创建者）</p><pre><code>INVOKER 表示用调用者的权限来执行。默认情况下，系统指定为DEFINER </code></pre><p>c、SQL SECURITY DEFINER：指定视图查询数据时的安全验证方式；</p><p>语法一<br>DATE_FORMAT(date,format)<br>date 参数是合法的日期。format 规定日期/时间的输出格式。<br>语法二<br>CURDATE()函数返回当前的日期。<br>INTERVAL </p><p>详情链接：</p><p>效果如图：创建完成查看视图sql</p><p>select ym.year_month from year_month_view ym group by ym.year_month;<br><img src="/" class="lazyload" data-src="http://qiniu.shieldofzues.cn/2020-06-02-060737.png"  alt=""><br>1.2 关联查询数据sql</p><p>SELECT<br>    ymv.year_month yearMonth,<br>    ifnull(pi.totalPay, 0) totalPay<br>FROM<br>    year_month_view ymv<br>LEFT JOIN (<br>    SELECT<br>        DATE_FORMAT(pi.in_Issu_time, ‘%Y-%m’) yearMonth,<br>        SUM(pi.total_Tax_included_Am) totalPay<br>    FROM<br>        pj_invoice pi<br>    WHERE<br>        DATE_FORMAT(pi.in_Issu_time, ‘%Y-%m’) &gt; DATE_FORMAT(<br>            date_sub(curdate(), INTERVAL 12 MONTH),<br>            ‘%Y-%m’<br>        )<br>    GROUP BY<br>        yearMonth<br>) pi ON ymv.year_month = pi.yearMonth<br>GROUP BY<br>    ymv.year_month<br>说明：sql对应in_Issu_time是我业务表中对应的某个时间，具体业务是查询过去一年中每个月的数据的总额。</p><p>pj对应的要查询的数据业务表、year_month_view视图、total_Tax_included_Am每条记录的总额度、计算出的总额totalPay</p><p>DATE_SUB(d,INTERVAL expr type)函数返回起始日期d减去一个时间段后的日期。</p><p>expr是一个表达式，用来指定从起始日期添加或减去的时间间隔值。</p><p>expr是一个字符串。对于负值的时间间隔，它可以用一个负号“-”开头。</p><p>expr表达式与后面的间隔类型type对应。</p><p>MySQL中的日期间隔类型如下表所示：<br><img src="/" class="lazyload" data-src="http://qiniu.shieldofzues.cn/2020-06-02-060805.png"  alt=""></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录 maven项目添加自定义jar包</title>
      <link href="/2019/02/18/maven%E8%87%AA%E5%AE%9A%E4%B9%89jar/"/>
      <url>/2019/02/18/maven%E8%87%AA%E5%AE%9A%E4%B9%89jar/</url>
      
        <content type="html"><![CDATA[<p>maven项目添加自定义jar包<br>1.确保在cmd当中可以正确使用mvn命令（通过mvn -v可以验证），然后使用如下命令：</p><p>mvn install:install-file -Dfile=包路径\xx.jar -DgroupId=com.yangjian.farme(可自定义) -DartifactId=jsper(可自定义) -Dversion=12.1(可自定义版本号) -Dpackaging=jar</p><p>说明：-Dfile参数指你自定义JAR包文件所在的路径，并依次指定了自定义的GroupId、ArtifactId和Version信息。<br>通过这种方式，可以简单快速地将第三方JAR包安装到本地仓库中供Maven项目依赖使用。例如：<br>2.添加项目依赖即可<br>       <dependency><br>        <groupId>com.yangjian.farme</groupId><br>        <artifactId>jsper</artifactId><br>        <version>12.1</version><br>       </dependency></p>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>idea 去除所有未引用的包（即如图：灰色的import）（附：官方帮助文档）</title>
      <link href="/2018/07/03/idea%E5%AF%BC%E5%8C%85/"/>
      <url>/2018/07/03/idea%E5%AF%BC%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p><img src="/" class="lazyload" data-src="http://qiniu.shieldofzues.cn/2020-06-02-055500.png"  alt="">jsp中的无用包;<br><img src="/" class="lazyload" data-src="http://qiniu.shieldofzues.cn/2020-06-02-055525.png"  alt="">类中的无用包;<br>方法一：包以上：均可以一并。去掉当前页面或类下直接快捷键Ctrl + Alt + O;<br>方法二：推荐设置如图，配置随时自动清除，勾选如下选项即可<img src="/" class="lazyload" data-src="http://www.shieldofzues.cn/2020-06-02-055543.png"  alt=""><br>方法三：官方帮助文档（原理同上）：可用谷歌浏览器（或其他带有自动翻译功能的浏览器）查看，如果你英语足够好，可忽略前边的话。<br><a href="https://www.jetbrains.com/help/idea/creating-and-optimizing-imports.html#disable-import-popups" target="_blank" rel="noopener">https://www.jetbrains.com/help/idea/creating-and-optimizing-imports.html#disable-import-popups</a><br>对应idea版本可稍微注意，可能版本不同略有差异。<br>注意：此文档包含了idea使用的说明，可保存随时查看之需。希望帮到你~~</p>]]></content>
      
      
      <categories>
          
          <category> idea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
